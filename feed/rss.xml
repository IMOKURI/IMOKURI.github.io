<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"
    xmlns:dc="http://purl.org/dc/elements/1.1/">
    <channel>
        <title>Wake up! Good night* - 最近の投稿</title>
        <link>https://imokuri123.com</link>
        <description><![CDATA[インフラ系SEのまとめノート]]></description>
        <atom:link href="https://imokuri123.com/feed/rss.xml" rel="self"
                   type="application/rss+xml" />
        <lastBuildDate>Mon, 18 Jan 2016 10:56:00 UT</lastBuildDate>
        <item>
    <title>LinuxのいろいろなID</title>
    <link>https://imokuri123.com/blog/2016/01/linux-ids.html</link>
    <description><![CDATA[<p>LinuxのいろいろなIDについてまとめてみますー。</p>
]]></description>
    <pubDate>Mon, 18 Jan 2016 10:56:00 UT</pubDate>
    <guid>https://imokuri123.com/blog/2016/01/linux-ids.html</guid>
    <dc:creator>IMOKURI</dc:creator>
</item>
<item>
    <title>git pushの出力がstderrであることの弊害</title>
    <link>https://imokuri123.com/blog/2016/01/git-push-output-is-stderr.html</link>
    <description><![CDATA[<p>git pushなどの出力は標準エラー(stderr)であることを最近知りました。。なぜstderrなのか、は過去<a href="http://git.661346.n2.nabble.com/git-push-output-goes-into-stderr-td6758028.html">こちら</a>でも話題となったようです。端的に言うと、「プログラムの実行結果の出力ではなく、実行の過程での出力だから」といった感じかと思います。</p>
<p>では、それで何がまずいのかですが。</p>
]]></description>
    <pubDate>Fri, 15 Jan 2016 21:57:00 UT</pubDate>
    <guid>https://imokuri123.com/blog/2016/01/git-push-output-is-stderr.html</guid>
    <dc:creator>IMOKURI</dc:creator>
</item>
<item>
    <title>stackのbuildpackを使って、herokuにHaskellのプログラムをリリースする。</title>
    <link>https://imokuri123.com/blog/2016/01/wai-example-using-buildback-stack.html</link>
    <description><![CDATA[<p>Haskellのプログラムをherokuにリリースしようとして、調べていたところ、<a href="http://qiita.com/eielh/items/e52aeee1419ba611a84d">dockerを使ってリリースする方法</a>が見つかったのですが、なんだかんだでうまく行かず、一旦断念。それはリベンジすることにして、<a href="https://github.com/mfine/heroku-buildpack-stack">buildpackのstack版</a>が見つかったので、それを使って、リリースをしてみました。</p>
]]></description>
    <pubDate>Tue, 12 Jan 2016 21:00:00 UT</pubDate>
    <guid>https://imokuri123.com/blog/2016/01/wai-example-using-buildback-stack.html</guid>
    <dc:creator>IMOKURI</dc:creator>
</item>
<item>
    <title>Github PagesのDefault branchを変えてみた。</title>
    <link>https://imokuri123.com/blog/2015/12/modify-default-branch.html</link>
    <description><![CDATA[<p><a href="https://github.com/IMOKURI">GithubのProfileのページ</a>で、草が生えないなぁと思っていたのです。<br />
Github Pagesのレポジトリを結構更新しているのになぁです。</p>
<p>調べてみると、<a href="https://help.github.com/articles/why-are-my-contributions-not-showing-up-on-my-profile/#commits">草を生やすには、Default branchへの更新でないとダメ</a>と判明。。</p>
<p>であれば、Github PagesのDefault branchを変えてみたらどうだろうか、をやってみました。</p>
]]></description>
    <pubDate>Fri, 25 Dec 2015 18:00:00 UT</pubDate>
    <guid>https://imokuri123.com/blog/2015/12/modify-default-branch.html</guid>
    <dc:creator>IMOKURI</dc:creator>
</item>
<item>
    <title>Hakyllでブログを作る(実践編4)</title>
    <link>https://imokuri123.com/blog/2015/12/how-to-create-blog-with-hakyll-part4.html</link>
    <description><![CDATA[<p>さて、<a href="/blog/2015/12/how-to-create-blog-with-hakyll-part3.html">前回</a>の続きになります。</p>
<p>最終回は、シンタックスハイライト＋αで締めくくりたいと思います。</p>
<p>カスタマイズしたソースは<a href="https://github.com/IMOKURI/hakyll-blog-example">こちら</a>に公開していますので、適宜ご参照ください。</p>
]]></description>
    <pubDate>Sat, 19 Dec 2015 00:03:00 UT</pubDate>
    <guid>https://imokuri123.com/blog/2015/12/how-to-create-blog-with-hakyll-part4.html</guid>
    <dc:creator>IMOKURI</dc:creator>
</item>
<item>
    <title>Hakyllでブログを作る(実践編3)</title>
    <link>https://imokuri123.com/blog/2015/12/how-to-create-blog-with-hakyll-part3.html</link>
    <description><![CDATA[<p>さて、<a href="/blog/2015/12/how-to-create-blog-with-hakyll-part2.html">前回</a>の続きになります。</p>
<p>今回は、カスタマイズ後半戦です。</p>
<p>カスタマイズしたソースは<a href="https://github.com/IMOKURI/hakyll-blog-example">こちら</a>に公開していますので、適宜ご参照ください。</p>
]]></description>
    <pubDate>Sat, 19 Dec 2015 00:02:00 UT</pubDate>
    <guid>https://imokuri123.com/blog/2015/12/how-to-create-blog-with-hakyll-part3.html</guid>
    <dc:creator>IMOKURI</dc:creator>
</item>
<item>
    <title>Hakyllでブログを作る(実践編2)</title>
    <link>https://imokuri123.com/blog/2015/12/how-to-create-blog-with-hakyll-part2.html</link>
    <description><![CDATA[<p>さて、<a href="/blog/2015/12/how-to-create-blog-with-hakyll-part1.html">前回</a>の続きになります。</p>
<p>今回は、テンプレートを離れて、いろいろカスタマイズしていきます。</p>
<p>カスタマイズしたソースは<a href="https://github.com/IMOKURI/hakyll-blog-example">こちら</a>に公開していますので、適宜ご参照ください。</p>
]]></description>
    <pubDate>Sat, 19 Dec 2015 00:01:00 UT</pubDate>
    <guid>https://imokuri123.com/blog/2015/12/how-to-create-blog-with-hakyll-part2.html</guid>
    <dc:creator>IMOKURI</dc:creator>
</item>
<item>
    <title>Hakyllでブログを作る(実践編)</title>
    <link>https://imokuri123.com/blog/2015/12/how-to-create-blog-with-hakyll-part1.html</link>
    <description><![CDATA[<p>Haskellのアドベントカレンダー初参加です。よろしくお願いします。</p>
<p>このサイトは<a href="http://jaspervdj.be/hakyll/">Hakyll</a>で運営しています。</p>
<p>少しずつノウハウが溜まってきたのでまとめてみたいと思います。</p>
<p>Hakyllのチュートリアル的な内容になっています。</p>
]]></description>
    <pubDate>Sat, 19 Dec 2015 00:00:00 UT</pubDate>
    <guid>https://imokuri123.com/blog/2015/12/how-to-create-blog-with-hakyll-part1.html</guid>
    <dc:creator>IMOKURI</dc:creator>
</item>
<item>
    <title>Github DesktopとAtomでブログの記事を書いてみる</title>
    <link>https://imokuri123.com/blog/2015/10/write-blog-with-atom-and-github-desktop.html</link>
    <description><![CDATA[<p>このブログはgithub pagesで運営しています。</p>
<p>いつもは、Linuxから記事を書いているのですが、ちょっと趣向をかえて、Github DesktopとAtomを使って、Windows上から記事を書いてみたいと思います。</p>
<p>使ってみたのは、こちらです。</p>
<ul>
<li>GitHub Desktop</li>
<li>Atom</li>
<li>Atomのパッケージのmarkdown-writer</li>
</ul>
<p>特に、markdown-writerがそこそこ使えそうなので、さわってみました。</p>
]]></description>
    <pubDate>Tue, 27 Oct 2015 00:00:00 UT</pubDate>
    <guid>https://imokuri123.com/blog/2015/10/write-blog-with-atom-and-github-desktop.html</guid>
    <dc:creator>IMOKURI</dc:creator>
</item>
<item>
    <title>DNFを使ってFedoraをアップグレードする（Fedora22->23）</title>
    <link>https://imokuri123.com/blog/2015/10/upgrade-fedora-using-dnf.html</link>
    <description><![CDATA[<p>Fedora 23から DNF を使って、Fedoraをアップグレードするのが<a href="https://fedoraproject.org/wiki/DNF_system_upgrade">推奨</a>となるようですので、早速試してみたいと思います。</p>
<p>Fedora 23はこの記事を書いている時点ではベータ版ですが、DNFでのアップグレードができました。</p>
]]></description>
    <pubDate>Mon, 26 Oct 2015 00:00:00 UT</pubDate>
    <guid>https://imokuri123.com/blog/2015/10/upgrade-fedora-using-dnf.html</guid>
    <dc:creator>IMOKURI</dc:creator>
</item>

    </channel>
</rss>
